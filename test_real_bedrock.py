#!/usr/bin/env python3
"""
Test script to call the real AWS API Gateway endpoint that uses Bedrock
"""

import requests
import json

def test_real_bedrock_workout():
    """Test the real AWS endpoint that calls Bedrock"""
    
    # Your deployed API Gateway endpoint
    endpoint = "https://h16zgwrsyh.execute-api.us-east-1.amazonaws.com/prod/fitness-coach"
    
    # Test payload
    payload = {
        "username": "test_user",
        "userId": "test_123",
        "query": "I want to build muscle and lose fat. I'm a beginner who can work out 4 days a week."
    }
    
    print("üéØ Testing Real Bedrock Integration")
    print("=" * 50)
    print(f"Endpoint: {endpoint}")
    print(f"Payload: {json.dumps(payload, indent=2)}")
    print("\nüîÑ Calling AWS API Gateway...")
    
    try:
        response = requests.post(
            endpoint,
            json=payload,
            headers={
                'Content-Type': 'application/json'
            },
            timeout=30
        )
        
        print(f"Status Code: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print("\n‚úÖ SUCCESS - Real Bedrock Response:")
            print("=" * 50)
            
            if data.get('success'):
                workout_plan = data.get('data', {}).get('workoutPlan')
                if workout_plan:
                    print(f"Plan Type: {workout_plan.get('plan_type')}")
                    print(f"Duration: {workout_plan.get('duration_weeks')} weeks")
                    print(f"Daily Workouts: {len(workout_plan.get('daily_workouts', []))}")
                    
                    # Show first day as example
                    if workout_plan.get('daily_workouts'):
                        first_day = workout_plan['daily_workouts'][0]
                        print(f"\nExample - {first_day.get('day')}:")
                        print(f"  Duration: {first_day.get('total_duration')} minutes")
                        print(f"  Exercises: {len(first_day.get('exercises', []))}")
                        
                        # Show first exercise with MCP enhancements
                        if first_day.get('exercises'):
                            first_ex = first_day['exercises'][0]
                            print(f"\n  First Exercise: {first_ex.get('name')}")
                            print(f"    Sets: {first_ex.get('sets')}")
                            print(f"    Reps: {first_ex.get('reps')}")
                            if first_ex.get('form_description'):
                                print(f"    Form (MCP Enhanced): {first_ex.get('form_description')[:100]}...")
                            if first_ex.get('safety_notes'):
                                print(f"    Safety (MCP Enhanced): {first_ex.get('safety_notes')[:100]}...")
                    
                    print(f"\nüéâ This workout was generated by REAL AWS Bedrock!")
                    print(f"üîß Enhanced with MCP servers for form descriptions and safety")
                else:
                    print("‚ùå No workout plan in response")
            else:
                print(f"‚ùå API returned error: {data.get('error')}")
        else:
            print(f"\n‚ùå HTTP Error {response.status_code}")
            print(f"Response: {response.text}")
            
    except requests.exceptions.Timeout:
        print("‚ùå Request timed out - this might indicate Bedrock is being called (it takes time)")
    except Exception as e:
        print(f"‚ùå Error: {str(e)}")

if __name__ == "__main__":
    test_real_bedrock_workout()